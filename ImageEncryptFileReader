import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;

import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;


public class ImageEncryptFileReader {
	
	public static void main(String[] in){
	ImageEncryptFileReader binary = new ImageEncryptFileReader();
	  
	  JFileChooser chooser = new JFileChooser();
	    FileNameExtensionFilter filter = new FileNameExtensionFilter(
	        "JPG & GIF Images", "jpg", "gif");
	    chooser.setFileFilter(filter);
	    int returnVal = chooser.showOpenDialog(null);
	    if(returnVal == JFileChooser.APPROVE_OPTION) {
	       System.out.println("You chose to open this file: " +
	            chooser.getSelectedFile().getName());
	    }
	    
	    try{
		    byte[] bytes = binary.readSmallBinaryFile(chooser.getSelectedFile().getName());
		    log("Small - size of file read in:" + bytes.length);
		    binary.writeSmallBinaryFile(bytes, OUTPUT_FILE_NAME);
	    }catch(Exception e){
	    	System.out.println(e.getMessage());
	    }
  }

  final static String OUTPUT_FILE_NAME = "pod";
  
  byte[] readSmallBinaryFile(String aFileName) throws IOException {
    Path path = Paths.get(aFileName);
    return Files.readAllBytes(path);
  }
  
  void writeSmallBinaryFile(byte[] aBytes, String aFileName) throws IOException {
    Path path = Paths.get(aFileName);
    Files.write(path, aBytes); //creates, overwrites
  }
 
  private static void log(Object aMsg){
    System.out.println(String.valueOf(aMsg));
  }
  
}  
